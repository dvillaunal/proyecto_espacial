d <- matrix(c(dt0$long, dt0$lat), ncol = 2, byrow = F)
inside <- in.out(border, d)
plot(x = border_ant[,1], y = border_ant[,2], col = "green4",
pch=19)
points(x = dt0$long, y = dt0$lat,
col = as.numeric((inside)*-1)+1)
# Chunk 6
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
# Chunk 7
# Conversión de coordenadas geográficas (LongLat)
# a coordenadas planas (UTM)
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$lat),
y=as.numeric(dt2$long)))
dt2
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$long),
y=as.numeric(dt2$lat)))
colombia <-gadm_sf_loadCountries(c("COL"), level=0, basefile="./")
departamentos <-gadm_sf_loadCountries(c("COL"), level=1, basefile="./")
departamentos$sf %>% head()
# Municipios de Estudio dentro de la región:
antioquia <- gadm_subset(departamentos, level=1,
regions=("Antioquia")) #%>%
# gadm_subset(., level = 2,
#             regions = (c("Medellín")))
gadm_plot(antioquia, title = "Departamento de Antiquia") %>%
gadm_showNorth("tl") %>% gadm_showScale('bl')
border_col <- st_coordinates(colombia$sf)
border_col <- as.matrix(border_col[,1:2])
border_ant <- st_coordinates(antioquia$sf)
border_ant <- as.matrix(border_ant[,1:2])
border <- rbind(border_col, border_ant)
dt0 <- read_csv("databases/temperature.csv")
head(dt0)
d <- matrix(c(dt0$long, dt0$lat), ncol = 2, byrow = F)
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$long),
y=as.numeric(dt2$lat)))
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
plot(geo_temp.max2, lowess=TRUE)
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
View(df2)
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
df2 <- data.frame(df2)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
df2[,1]
df2[12,]
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)[-12,]
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
View(border_ant)
departamentos <-gadm_sf_loadCountries(c("COL"), level=1, basefile="./")
departamentos$sf %>% head()
# Municipios de Estudio dentro de la región:
antioquia <- gadm_subset(departamentos, level=1,
regions=("Antioquia"))
gadm_plot(antioquia, title = "Departamento de Antiquia") %>%
gadm_showNorth("tl") %>% gadm_showScale('bl')
border_ant <- st_coordinates(antioquia$sf)
border_ant <- as.matrix(border_ant[,1:2])[-3,]
gc()
# Chunk 1
library(geoR); library(gstat) ;library(sf);library(raster)
library(rgdal)
library(vegan)
library(ade4)
library(GADMTools)
library(readxl)
library(tidyverse)
require(janitor)
require(magrittr)
library(tmaptools) # Geocodificación y visualización
library(tidygeocoder) # Geocodificación
library(leaflet) # Visualización
library(sm)
require(gstat)
require(MASS)
library(mgcv)
# Chunk 2
departamentos <-gadm_sf_loadCountries(c("COL"), level=1, basefile="./")
departamentos$sf %>% head()
# Chunk 3
# Municipios de Estudio dentro de la región:
antioquia <- gadm_subset(departamentos, level=1,
regions=("Antioquia"))
gadm_plot(antioquia, title = "Departamento de Antiquia") %>%
gadm_showNorth("tl") %>% gadm_showScale('bl')
border_ant <- st_coordinates(antioquia$sf)
border_ant <- as.matrix(border_ant[,1:2])[-3,]
dt0 <- read_csv("databases/temperature.csv")
head(dt0)
plot(x = border_ant[,1], y = border_ant[,2], col = "green4",
pch=19)
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$long),
y=as.numeric(dt2$lat)))
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
plot(geo_temp.max2, lowess=TRUE)
border_ant <- st_coordinates(antioquia$sf)
border_ant <- as.matrix(border_ant[,1:2])[-3,]
View(border_ant)
knitr::purl("presentacion_datos.qmd", "presentacion_datos.R")
library(geoR); library(gstat) ;library(sf);library(raster)
library(rgdal)
library(vegan)
library(ade4)
library(GADMTools)
library(readxl)
library(tidyverse)
require(janitor)
require(magrittr)
library(tmaptools) # Geocodificación y visualización
library(tidygeocoder) # Geocodificación
library(leaflet) # Visualización
library(sm)
require(gstat)
require(MASS)
library(mgcv)
# Municipios de Estudio dentro de la región:
antioquia <- read_csv("databases/borde_antioquia.csv")
border_ant <- st_coordinates(antioquia)
antioquia %>% st_as_sf()
antioquia
# Municipios de Estudio dentro de la región:
antioquia <- st_read("databases/borde_antioquia.csv")
antioquia
border_ant <- st_coordinates(antioquia)
col <- st_read("databases/MGN_DPTO_POLITICO.shp") # Archivo de interes
plot(col$geometry)
View(col)
plot(col[31,"geometry"])
plot(col[20,"geometry"])
plot(col[1,"geometry"])
plot(col[2,"geometry"])
View(col)
View(col[[1]][[1]])
plot(col[1:2,"geometry"])
plot(col[1:10,"geometry"])
plot(col[11:20,"geometry"])
plot(col[11,"geometry"])
plot(col[12,"geometry"])
plot(col[13,"geometry"])
plot(col[14,"geometry"])
antiquia <- col[14,"geometry"]
col <- st_read("databases/MGN_DPTO_POLITICO.shp") # Archivo de interes
plot(col$geometry)
antiquia <- col[14,"geometry"]
border_ant <- st_coordinates(antioquia) #matriz del sistema coordenadas
antioquia <- col[14,"geometry"]
border_ant <- st_coordinates(antioquia) #matriz del sistema coordenadas
rm(antiquia)
border_ant <- as.data.frame(border_ant[,1:2])
dt0 <- read_csv("databases/temperature.csv")
head(dt0)
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$long),
y=as.numeric(dt2$lat)))
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
datos2.sp
plot(datos2.sp)
points(geo_temp.max2, col = "gray", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
plot(geo_temp.max2, lowess=TRUE)
plot(geo_temp.max2, lowess=TRUE, trend = "2nd")
qqnorm(df2$`Temp max`, pch = 19)
qqline(df2$`Temp max`)
shapiro.test(df2$`Temp max`)
dt <- dt0 %>% filter(date == "2019-03-10") %>% na.omit()
datos <- as.matrix(data.frame(x=as.numeric(dt$lat),
y=as.numeric(dt$long)))
datos <- as.matrix(data.frame(x=as.numeric(dt$long),
y=as.numeric(dt$lat)))
x1 <- as.numeric(dt$tmin)
x2 <- as.numeric(dt$tmax)
x3 <- as.numeric(dt$elev)
df <- cbind(datos, x1,x2,x3)
df <- data.frame(df)
colnames(df)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max <- as.geodata(df, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max$borderland<- borderland
datos.sp <- df
coordinates(datos.sp) <- ~X+Y
plot(geo_temp.max, lowess=TRUE)
geo_temp.max$borders <- border_ant
geo_temp.max
geo_temp.max <- as.geodata(df, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max$borders <- border_ant
datos.sp <- df
coordinates(datos.sp) <- ~X+Y
plot(geo_temp.max, lowess=TRUE)
qqnorm(df$`Temp max`)
qqline(df$`Temp max`)
shapiro.test(df$`Temp max`)
distancia1 <- dist(df[,1:2], diag=TRUE, upper=TRUE)
dif.temp1 <- dist(df[,4], diag=TRUE, upper=TRUE)^2
distancia2 <- dist(df2[,1:2], diag=TRUE, upper=TRUE)
dif.temp2 <- dist(df2[,4], diag=TRUE, upper=TRUE)^2
datosmatriz1 <- data.frame(dif.prof=dif.temp1[lower.tri(dif.temp1)],
distancia1=distancia1[lower.tri(distancia1)])
datosmatriz2 <- data.frame(dif.prof=dif.temp2[lower.tri(dif.temp2)],
distancia2=distancia2[lower.tri(distancia2)])
par(mfrow = c(1,2))
# (2019-03-10) [Normal]
plot(x = datosmatriz1$distancia1, y = datosmatriz1$dif.prof,
main = "2019-03-10 (Normal)", ylab = "Diferencia en temperatura",
xlab = "Distancia (m)")
abline(lm(dif.prof~distancia1, data = datosmatriz1), lwd = 2,
col = "red")
# (2019-01-10) [NO Normal]
plot(x = datosmatriz2$distancia2, y = datosmatriz2$dif.prof,
main = "2019-01-10 (No Normal)", ylab = "Diferencia en temperatura",
xlab = "Distancia (m)")
abline(lm(dif.prof~distancia2, data = datosmatriz2), lwd = 2,
col = "red")
mantel(distancia1, dif.temp1, na.rm = T)
mantel.rtest(distancia1, dif.temp1, nrepet=999)
mantel(distancia2, dif.temp2)
mantel.rtest(distancia2, dif.temp2)
mantel(distancia1, dif.temp1, na.rm = T)
mantel.rtest(distancia1, dif.temp1, nrepet=999)
mantel(distancia2, dif.temp2)
mantel.rtest(distancia2, dif.temp2)
resumen <- summary(geo_temp.max)
distancia <- resumen$distances.summary
dm <- distancia[2]/2; dm
vario1 <- variog(geo_temp.max, option = "cloud")
vario2 <- variog(geo_temp.max, option = "cloud", max.dist = dm)
par(mfrow=c(1,2))
plot(vario1, pch=21, bg="blue", lwd="black",
main="Variograma sin ajuste\ncon regla empírica")
plot(vario2, pch=21, bg="red", lwd="black",
main="Variograma ajuste\ncon regla empírica")
bin1 <- variog(geo_temp.max,option="bin")
bin2 <- variog(geo_temp.max,option="bin",max.dist=dm)
par(mfrow=c(1,2))
plot(bin1, pch=21, bg="blue", lwd="black",
main="Semivariograma sin ajuste\ncon regla empírica")
plot(bin2, pch=21, bg="red", lwd="black",
main="Semivariograma ajuste\ncon regla empírica")
par(mfrow = c(1,1))
sm.variogram(datos.sp@coords, datos.sp@data$`Temp max`,model="independent",
ylim = c(0,70))
ini.vals1 <- c(17.79,0.7)
fit_matern <- variofit(vario = bin2,ini.cov.pars = ini.vals1, fix.nugget =F,
weights = "npairs", min="optim", nugget = 0.03)
plot(bin2, pch=21, bg="blue", lwd="black",
main="Semivariograma con ajuste Matern")
lines(fit_matern)
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
leaflet(antioquia) %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
leaflet(antioquia) %>%
addPolygons() %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
leaflet(antioquia) %>%
addPolygons(color = "red") %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
# Chunk 1
library(geoR); library(gstat) ;library(sf);library(raster)
library(rgdal)
library(vegan)
library(ade4)
library(GADMTools)
library(readxl)
library(tidyverse)
require(janitor)
require(magrittr)
library(tmaptools) # Geocodificación y visualización
library(tidygeocoder) # Geocodificación
library(leaflet) # Visualización
library(sm)
require(gstat)
require(MASS)
library(mgcv)
# Chunk 2
col <- st_read("databases/MGN_DPTO_POLITICO.shp") # Archivo de interes
plot(col$geometry)
antioquia <- col[14,"geometry"]
border_ant <- st_coordinates(antioquia) #matriz del sistema coordenadas
border_ant <- as.data.frame(border_ant[,1:2])
# Chunk 3
dt0 <- read_csv("databases/temperature.csv")
head(dt0)
# Chunk 4
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
# Chunk 5
leaflet(antioquia) %>%
addPolygons(color = "red") %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
# Chunk 6
# Conversión de coordenadas geográficas (LongLat)
# a coordenadas planas (UTM)
datos2 <- as.matrix(data.frame(x=as.numeric(dt2$long),
y=as.numeric(dt2$lat)))
# Chunk 7
x1.2 <- as.numeric(dt2$tmin)
x2.2 <- as.numeric(dt2$tmax)
x3.2 <- as.numeric(dt2$elev)
df2 <- cbind(datos2, x1.2,x2.2,x3.2)
df2 <- data.frame(df2)
colnames(df2)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max2 <- as.geodata(df2, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max2$borders <- border_ant
datos2.sp <- df2
coordinates(datos2.sp) <- ~X+Y
# Chunk 8
points(geo_temp.max2, col = "blue3", pt.divide = "equal",
xlab = "Longitud", ylab = "Latitud")
plot(geo_temp.max2, lowess=TRUE)
# Chunk 9
plot(geo_temp.max2, lowess=TRUE, trend = "2nd")
# Chunk 10
qqnorm(df2$`Temp max`, pch = 19)
qqline(df2$`Temp max`)
# Chunk 11
shapiro.test(df2$`Temp max`)
# Chunk 12
dt <- dt0 %>% filter(date == "2019-03-10") %>% na.omit()
# Conversión de coordenadas geográficas (LongLat)
# a coordenadas planas (UTM)
datos <- as.matrix(data.frame(x=as.numeric(dt$long),
y=as.numeric(dt$lat)))
x1 <- as.numeric(dt$tmin)
x2 <- as.numeric(dt$tmax)
x3 <- as.numeric(dt$elev)
df <- cbind(datos, x1,x2,x3)
df <- data.frame(df)
colnames(df)<-c("X","Y", "Temp min", "Temp max", "elev")
geo_temp.max <- as.geodata(df, coords = 1:2, data.col = 4, borders=TRUE)
geo_temp.max$borders <- border_ant
datos.sp <- df
coordinates(datos.sp) <- ~X+Y
plot(geo_temp.max, lowess=TRUE)
# Chunk 13
qqnorm(df$`Temp max`, pch = 19)
qqline(df$`Temp max`)
shapiro.test(df$`Temp max`)
# Chunk 14
distancia1 <- dist(df[,1:2], diag=TRUE, upper=TRUE)
dif.temp1 <- dist(df[,4], diag=TRUE, upper=TRUE)^2
distancia2 <- dist(df2[,1:2], diag=TRUE, upper=TRUE)
dif.temp2 <- dist(df2[,4], diag=TRUE, upper=TRUE)^2
# Chunk 15
datosmatriz1 <- data.frame(dif.prof=dif.temp1[lower.tri(dif.temp1)],
distancia1=distancia1[lower.tri(distancia1)])
datosmatriz2 <- data.frame(dif.prof=dif.temp2[lower.tri(dif.temp2)],
distancia2=distancia2[lower.tri(distancia2)])
par(mfrow = c(1,2))
# (2019-03-10) [Normal]
plot(x = datosmatriz1$distancia1, y = datosmatriz1$dif.prof,
main = "2019-03-10 (Normal)", ylab = "Diferencia en temperatura",
xlab = "Distancia (m)")
abline(lm(dif.prof~distancia1, data = datosmatriz1), lwd = 2,
col = "red")
# (2019-01-10) [NO Normal]
plot(x = datosmatriz2$distancia2, y = datosmatriz2$dif.prof,
main = "2019-01-10 (No Normal)", ylab = "Diferencia en temperatura",
xlab = "Distancia (m)")
abline(lm(dif.prof~distancia2, data = datosmatriz2), lwd = 2,
col = "red")
# Chunk 16
mantel(distancia1, dif.temp1, na.rm = T)
# Chunk 17
mantel.rtest(distancia1, dif.temp1, nrepet=999)
# Chunk 18
mantel(distancia2, dif.temp2)
mantel.rtest(distancia2, dif.temp2)
# Chunk 19
resumen <- summary(geo_temp.max)
distancia <- resumen$distances.summary
dm <- distancia[2]/2; dm
# Chunk 20
vario1 <- variog(geo_temp.max, option = "cloud")
vario2 <- variog(geo_temp.max, option = "cloud", max.dist = dm)
par(mfrow=c(1,2))
plot(vario1, pch=21, bg="blue", lwd="black",
main="Variograma sin ajuste\ncon regla empírica")
plot(vario2, pch=21, bg="red", lwd="black",
main="Variograma ajuste\ncon regla empírica")
# Chunk 21
bin1 <- variog(geo_temp.max,option="bin")
bin2 <- variog(geo_temp.max,option="bin",max.dist=dm)
par(mfrow=c(1,2))
plot(bin1, pch=21, bg="blue", lwd="black",
main="Semivariograma sin ajuste\ncon regla empírica")
plot(bin2, pch=21, bg="red", lwd="black",
main="Semivariograma ajuste\ncon regla empírica")
# Chunk 22
par(mfrow = c(1,1))
sm.variogram(datos.sp@coords, datos.sp@data$`Temp max`,model="independent",
ylim = c(0,70))
# Chunk 23
ini.vals1 <- c(17.79,0.7)
fit_matern <- variofit(vario = bin2,ini.cov.pars = ini.vals1, fix.nugget =F,
weights = "npairs", min="optim", nugget = 0.03)
plot(bin2, pch=21, bg="blue", lwd="black",
main="Semivariograma con ajuste Matern")
lines(fit_matern, lwd = 2, col = "red")
# Chunk 24
eyefit(bin1) # exponencial siga 17.34 phi 1.48 tausq 2.17 range 4.4336
# Chunk 25
eyefit(bin1)
# Chunk 26
eyefit(bin1)
# Chunk 27
eyefit(bin1)
# Chunk 28
eyefit(bin1)
gc()
gc()
library(geoR); library(gstat) ;library(sf);library(raster)
library(rgdal)
library(vegan)
library(ade4)
library(tidyverse)
require(magrittr)
library(tmaptools) # Geocodificación y visualización
library(tidygeocoder) # Geocodificación
library(leaflet) # Visualización
library(sm)
require(gstat)
require(MASS)
col <- st_read("databases/MGN_DPTO_POLITICO.shp") # Archivo de interés
plot(col$geometry)
antioquia <- col[14,"geometry"]
border_ant <- st_coordinates(antioquia) #matriz del sistema coordenadas
border_ant <- as.data.frame(border_ant[,1:2])
dt0 <- read_csv("databases/temperature.csv")
head(dt0)
dt2 <- dt0 %>% filter(date == "2019-01-10") %>% na.omit()
leaflet(antioquia) %>%
addPolygons(color = "red") %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
leaflet(antioquia) %>%
addPolygons(color = "red") %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(lng = dt2$long, lat = dt2$lat)
